// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace DeliveryTicket_New_Save
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// NavigateToWorkingDeliveryTicketFileMethod
        /// </summary>
        public void NavigateToWorkingDeliveryTicketFileMethod()
        {
            #region Variable Declarations
            WpfHyperlink uIDeliveryTicketsHyperlink = this.UICareTendWindow.UIMenuExpander.UIDeliveryTicketsText.UIDeliveryTicketsHyperlink;
            #endregion

            // Click 'Delivery Tickets' link
            Mouse.Click(uIDeliveryTicketsHyperlink, new Point(54, 2));
            Playback.Wait(6000);
        }
        
        /// <summary>
        /// CreatingNewDTMethod - Use 'CreatingNewDTMethodParams' to pass parameters into this method.
        /// </summary>
        public void CreatingNewDTMethod()
        {
            #region Variable Declarations
            WpfButton uINewButton = this.UICareTendWindow.UINewButton;
            WpfDatePicker uITargetDeliveryDateDatePicker = this.UICareTendWindow.UIItemCustom.UITabsControlTabList.UIDeliveryInstructionsTabPage.UITargetDeliveryDateDatePicker;
            WpfComboBox uIDeliveryCompanyComboBox = this.UICareTendWindow.UIItemCustom.UITabsControlTabList.UIDeliveryInstructionsTabPage.UIDeliveryCompanyComboBox;
            #endregion

            // Click 'New' button
            Mouse.Click(uINewButton, new Point(36, 10));
            Playback.Wait(5000);

            // Select Date in date picker
            Keyboard.SendKeys("{Ctrl}" + "{Insert}");
            Playback.Wait(5000);

            // Select 'Roger's Ohio Company' in 'DeliveryCompany' combo box
            Mouse.Click(uIDeliveryCompanyComboBox);
            Keyboard.SendKeys("Roger's Ohio Company");
            Keyboard.SendKeys("{Enter}");
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// NavigateToDeliveryTicketItemsTabMethod
        /// </summary>
        public void NavigateToDeliveryTicketItemsTabMethod()
        {
            #region Variable Declarations
            WpfTabPage uIDeliveryTicketItemsTabPage = this.UICareTendWindow.UIItemCustom.UITabsControlTabList.UIDeliveryTicketItemsTabPage;
            #endregion

            // Click 'Delivery Ticket Items' tab
            Mouse.Click(uIDeliveryTicketItemsTabPage, new Point(55, 12));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// ClosePrescriptionWindowMethod
        /// </summary>
        public void ClosePrescriptionWindowMethod()
        {
            #region Variable Declarations
            WpfButton uICancelButton = this.UICareTendWindow.UICancelButton;
            #endregion

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(15, 8));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// OrderSelectionMethod
        /// </summary>
        public void OrderSelectionMethod()
        {
            #region Variable Declarations
            WpfComboBox uIOrderComboBox = this.UICareTendWindow.UIItemCustom.UITabsControlTabList.UIDeliveryTicketItemsTabPage.UIOrderComboBox;
            #endregion

            // Click 'Order' combo box
            //Mouse.Click(uIOrderComboBox, new Point(290, 14));
            Mouse.Click(uIOrderComboBox, new Point(291, 11));
            Keyboard.SendKeys("{Down}, {Down}");
            Keyboard.SendKeys("{Enter}");
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// NavigateToInventoryLookup
        /// </summary>
        public void NavigateToInventoryLookup()
        {
            #region Variable Declarations
            WpfHyperlink uIAddFromInventoryHyperlink = this.UICareTendWindow.UIActivitiesExpander.UIAddFromInventoryText.UIAddFromInventoryHyperlink;
            #endregion

            // Click 'Add From Inventory' link
            Mouse.Click(uIAddFromInventoryHyperlink, new Point(51, 7));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// AddingSupplyItem_QuantityMethod - Use 'AddingSupplyItem_QuantityMethodParams' to pass parameters into this method.
        /// </summary>
        public void AddingSupplyItem_QuantityMethod()
        {
            #region Variable Declarations
            WpfCheckBox uISupplyCheckBox = this.UICareTendWindow.UISupplyCheckBox;
            WpfButton uIApplyButton = this.UICareTendWindow.UIApplyButton;
            WpfCell uIAdhesiveRemoverWipe5Cell = this.UICareTendWindow.UIItemCustom1.UIDgResultsTable.UIRow_1Row.UIAdhesiveRemoverWipe5Cell;
            WpfCell uIItemDHSClientContracCell = this.UICareTendWindow.UIItemCustom.UITabsControlTabList.UIDeliveryTicketItemsTabPage.UIDgItemsTable.UIRow_0Row.UIItemDHSClientContracCell;
            WpfButton uISaveCloseButton = this.UICareTendWindow.UISaveCloseButton;
            #endregion
                        
            // Select 'Supply' check box
            uISupplyCheckBox.Checked = this.AddingSupplyItem_QuantityMethodParams.UISupplyCheckBoxChecked;
            Playback.Wait(5000);

            // Click 'Apply' button
            Mouse.Click(uIApplyButton, new Point(19, 1));
            Playback.Wait(5000);

            // Type '{Enter}' in 'Adhesive Remover Wipe (50/bx)' cell
            Keyboard.SendKeys(uIAdhesiveRemoverWipe5Cell, this.AddingSupplyItem_QuantityMethodParams.UIAdhesiveRemoverWipe5CellSendKeys, ModifierKeys.None);
            Playback.Wait(5000);

            // Type '30' in 'Item: DHS.Client.Contracts.DeliveryTicketItemDataO...' cell
            //uIItemDHSClientContracCell.Value = this.AddingSupplyItem_QuantityMethodParams.UIItemDHSClientContracCellValue;
            Keyboard.SendKeys("30");

            // Click 'Save & Close' button
            Mouse.Click(uISaveCloseButton, new Point(11, 6));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// CloseWorkingDeliveryTicketWindowMethod
        /// </summary>
        public void CloseWorkingDeliveryTicketWindowMethod()
        {
            #region Variable Declarations
            WpfButton uICloseButton = this.UICareTendWindow.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(14, 10));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// ClosePatientClinicalWindowMethod
        /// </summary>
        public void ClosePatientClinicalWindowMethod()
        {
            #region Variable Declarations
            WpfButton uICloseButton1 = this.UICareTendWindow.UICloseButton1;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(18, 9));
            Playback.Wait(5000);
        }
        
        /// <summary>
        /// CloseCareTendApplicationMethod
        /// </summary>
        public void CloseCareTendApplicationMethod()
        {
            #region Variable Declarations
            WpfButton uIItemButton = this.UICareTendWindow.UIItemButton;
            #endregion

            // Click button numbered 6 in 'CareTend' window
            Mouse.Click(uIItemButton, new Point(23, 20));
            Playback.Wait(5000);
        }
        
        #region Properties
        public virtual CreatingNewDTMethodParams CreatingNewDTMethodParams
        {
            get
            {
                if ((this.mCreatingNewDTMethodParams == null))
                {
                    this.mCreatingNewDTMethodParams = new CreatingNewDTMethodParams();
                }
                return this.mCreatingNewDTMethodParams;
            }
        }
        
        public virtual AddingSupplyItem_QuantityMethodParams AddingSupplyItem_QuantityMethodParams
        {
            get
            {
                if ((this.mAddingSupplyItem_QuantityMethodParams == null))
                {
                    this.mAddingSupplyItem_QuantityMethodParams = new AddingSupplyItem_QuantityMethodParams();
                }
                return this.mAddingSupplyItem_QuantityMethodParams;
            }
        }
        
        public UICareTendWindow UICareTendWindow
        {
            get
            {
                if ((this.mUICareTendWindow == null))
                {
                    this.mUICareTendWindow = new UICareTendWindow();
                }
                return this.mUICareTendWindow;
            }
        }
        #endregion
        
        #region Fields
        private CreatingNewDTMethodParams mCreatingNewDTMethodParams;
        
        private AddingSupplyItem_QuantityMethodParams mAddingSupplyItem_QuantityMethodParams;
        
        private UICareTendWindow mUICareTendWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreatingNewDTMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class CreatingNewDTMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select '17-Jun-2019' in 'TargetDeliveryDate' date picker
        /// </summary>
        public string UITargetDeliveryDateDatePickerDateAsString = "17-Jun-2019";
        
        /// <summary>
        /// Select 'Roger's Ohio Company' in 'DeliveryCompany' combo box
        /// </summary>
        public string UIDeliveryCompanyComboBoxSelectedItem = "Roger\'s Ohio Company";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddingSupplyItem_QuantityMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class AddingSupplyItem_QuantityMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Supply' check box
        /// </summary>
        public bool UISupplyCheckBoxChecked = true;
        
        /// <summary>
        /// Type '{Enter}' in 'Adhesive Remover Wipe (50/bx)' cell
        /// </summary>
        public string UIAdhesiveRemoverWipe5CellSendKeys = "{Enter}";
        
        /// <summary>
        /// Type '30' in 'Item: DHS.Client.Contracts.DeliveryTicketItemDataO...' cell
        /// </summary>
        public string UIItemDHSClientContracCellValue = "30";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UICareTendWindow : WpfWindow
    {
        
        public UICareTendWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CareTend";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIMenuExpander UIMenuExpander
        {
            get
            {
                if ((this.mUIMenuExpander == null))
                {
                    this.mUIMenuExpander = new UIMenuExpander(this);
                }
                return this.mUIMenuExpander;
            }
        }
        
        public WpfButton UINewButton
        {
            get
            {
                if ((this.mUINewButton == null))
                {
                    this.mUINewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINewButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnNew";
                    this.mUINewButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUINewButton;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public WpfButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCancel";
                    this.mUICancelButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        
        public UIActivitiesExpander UIActivitiesExpander
        {
            get
            {
                if ((this.mUIActivitiesExpander == null))
                {
                    this.mUIActivitiesExpander = new UIActivitiesExpander(this);
                }
                return this.mUIActivitiesExpander;
            }
        }
        
        public WpfCheckBox UISupplyCheckBox
        {
            get
            {
                if ((this.mUISupplyCheckBox == null))
                {
                    this.mUISupplyCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUISupplyCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Supply";
                    this.mUISupplyCheckBox.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUISupplyCheckBox;
            }
        }
        
        public WpfButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSearch";
                    this.mUIApplyButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        
        public WpfButton UISaveCloseButton
        {
            get
            {
                if ((this.mUISaveCloseButton == null))
                {
                    this.mUISaveCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnFramerSave";
                    this.mUISaveCloseButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUISaveCloseButton;
            }
        }
        
        public WpfButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnClose";
                    this.mUICloseButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public WpfButton UICloseButton1
        {
            get
            {
                if ((this.mUICloseButton1 == null))
                {
                    this.mUICloseButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUICloseButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnFramerClose";
                    this.mUICloseButton1.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUICloseButton1;
            }
        }
        
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.Instance] = "6";
                    this.mUIItemButton.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuExpander mUIMenuExpander;
        
        private WpfButton mUINewButton;
        
        private UIItemCustom mUIItemCustom;
        
        private WpfButton mUICancelButton;
        
        private UIActivitiesExpander mUIActivitiesExpander;
        
        private WpfCheckBox mUISupplyCheckBox;
        
        private WpfButton mUIApplyButton;
        
        private UIItemCustom1 mUIItemCustom1;
        
        private WpfButton mUISaveCloseButton;
        
        private WpfButton mUICloseButton;
        
        private WpfButton mUICloseButton1;
        
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIMenuExpander : WpfExpander
    {
        
        public UIMenuExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "menuExpander";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIDeliveryTicketsText UIDeliveryTicketsText
        {
            get
            {
                if ((this.mUIDeliveryTicketsText == null))
                {
                    this.mUIDeliveryTicketsText = new UIDeliveryTicketsText(this);
                }
                return this.mUIDeliveryTicketsText;
            }
        }
        #endregion
        
        #region Fields
        private UIDeliveryTicketsText mUIDeliveryTicketsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDeliveryTicketsText : WpfText
    {
        
        public UIDeliveryTicketsText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Delivery Tickets";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UIDeliveryTicketsHyperlink
        {
            get
            {
                if ((this.mUIDeliveryTicketsHyperlink == null))
                {
                    this.mUIDeliveryTicketsHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUIDeliveryTicketsHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Delivery Tickets";
                    this.mUIDeliveryTicketsHyperlink.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIDeliveryTicketsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUIDeliveryTicketsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeliveryTicketView";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UITabsControlTabList UITabsControlTabList
        {
            get
            {
                if ((this.mUITabsControlTabList == null))
                {
                    this.mUITabsControlTabList = new UITabsControlTabList(this);
                }
                return this.mUITabsControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabsControlTabList mUITabsControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITabsControlTabList : WpfTabList
    {
        
        public UITabsControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "TabsControl";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIDeliveryInstructionsTabPage UIDeliveryInstructionsTabPage
        {
            get
            {
                if ((this.mUIDeliveryInstructionsTabPage == null))
                {
                    this.mUIDeliveryInstructionsTabPage = new UIDeliveryInstructionsTabPage(this);
                }
                return this.mUIDeliveryInstructionsTabPage;
            }
        }
        
        public UIDeliveryTicketItemsTabPage UIDeliveryTicketItemsTabPage
        {
            get
            {
                if ((this.mUIDeliveryTicketItemsTabPage == null))
                {
                    this.mUIDeliveryTicketItemsTabPage = new UIDeliveryTicketItemsTabPage(this);
                }
                return this.mUIDeliveryTicketItemsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIDeliveryInstructionsTabPage mUIDeliveryInstructionsTabPage;
        
        private UIDeliveryTicketItemsTabPage mUIDeliveryTicketItemsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDeliveryInstructionsTabPage : WpfTabPage
    {
        
        public UIDeliveryInstructionsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "TabDeliveryInstructions";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfDatePicker UITargetDeliveryDateDatePicker
        {
            get
            {
                if ((this.mUITargetDeliveryDateDatePicker == null))
                {
                    this.mUITargetDeliveryDateDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUITargetDeliveryDateDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "TargetDeliveryDate";
                    this.mUITargetDeliveryDateDatePicker.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUITargetDeliveryDateDatePicker;
            }
        }
        
        public WpfComboBox UIDeliveryCompanyComboBox
        {
            get
            {
                if ((this.mUIDeliveryCompanyComboBox == null))
                {
                    this.mUIDeliveryCompanyComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIDeliveryCompanyComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "DeliveryCompany";
                    this.mUIDeliveryCompanyComboBox.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIDeliveryCompanyComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfDatePicker mUITargetDeliveryDateDatePicker;
        
        private WpfComboBox mUIDeliveryCompanyComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDeliveryTicketItemsTabPage : WpfTabPage
    {
        
        public UIDeliveryTicketItemsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "TabItems";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UIOrderComboBox
        {
            get
            {
                if ((this.mUIOrderComboBox == null))
                {
                    this.mUIOrderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIOrderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Order";
                    this.mUIOrderComboBox.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIOrderComboBox;
            }
        }
        
        public UIDgItemsTable UIDgItemsTable
        {
            get
            {
                if ((this.mUIDgItemsTable == null))
                {
                    this.mUIDgItemsTable = new UIDgItemsTable(this);
                }
                return this.mUIDgItemsTable;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUIOrderComboBox;
        
        private UIDgItemsTable mUIDgItemsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDgItemsTable : WpfTable
    {
        
        public UIDgItemsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dgItems";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIRow_0Row UIRow_0Row
        {
            get
            {
                if ((this.mUIRow_0Row == null))
                {
                    this.mUIRow_0Row = new UIRow_0Row(this);
                }
                return this.mUIRow_0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow_0Row mUIRow_0Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIRow_0Row : WpfRow
    {
        
        public UIRow_0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "Row_0";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfCell UIItemDHSClientContracCell
        {
            get
            {
                if ((this.mUIItemDHSClientContracCell == null))
                {
                    this.mUIItemDHSClientContracCell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIItemDHSClientContracCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Qty";
                    this.mUIItemDHSClientContracCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "Cell_0_9";
                    this.mUIItemDHSClientContracCell.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIItemDHSClientContracCell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIItemDHSClientContracCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIActivitiesExpander : WpfExpander
    {
        
        public UIActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Activities";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIAddFromInventoryText UIAddFromInventoryText
        {
            get
            {
                if ((this.mUIAddFromInventoryText == null))
                {
                    this.mUIAddFromInventoryText = new UIAddFromInventoryText(this);
                }
                return this.mUIAddFromInventoryText;
            }
        }
        #endregion
        
        #region Fields
        private UIAddFromInventoryText mUIAddFromInventoryText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIAddFromInventoryText : WpfText
    {
        
        public UIAddFromInventoryText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Add From Inventory";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UIAddFromInventoryHyperlink
        {
            get
            {
                if ((this.mUIAddFromInventoryHyperlink == null))
                {
                    this.mUIAddFromInventoryHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUIAddFromInventoryHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Add From Inventory";
                    this.mUIAddFromInventoryHyperlink.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIAddFromInventoryHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUIAddFromInventoryHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InventoryLookupPluginView";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIDgResultsTable UIDgResultsTable
        {
            get
            {
                if ((this.mUIDgResultsTable == null))
                {
                    this.mUIDgResultsTable = new UIDgResultsTable(this);
                }
                return this.mUIDgResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDgResultsTable mUIDgResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDgResultsTable : WpfTable
    {
        
        public UIDgResultsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dgResults";
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public UIRow_1Row UIRow_1Row
        {
            get
            {
                if ((this.mUIRow_1Row == null))
                {
                    this.mUIRow_1Row = new UIRow_1Row(this);
                }
                return this.mUIRow_1Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow_1Row mUIRow_1Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIRow_1Row : WpfRow
    {
        
        public UIRow_1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "Row_1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("CareTend");
            #endregion
        }
        
        #region Properties
        public WpfCell UIAdhesiveRemoverWipe5Cell
        {
            get
            {
                if ((this.mUIAdhesiveRemoverWipe5Cell == null))
                {
                    this.mUIAdhesiveRemoverWipe5Cell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIAdhesiveRemoverWipe5Cell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Item";
                    this.mUIAdhesiveRemoverWipe5Cell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "Cell_1_1";
                    this.mUIAdhesiveRemoverWipe5Cell.WindowTitles.Add("CareTend");
                    #endregion
                }
                return this.mUIAdhesiveRemoverWipe5Cell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIAdhesiveRemoverWipe5Cell;
        #endregion
    }
}
